' Python to send to server
import socket

def send_to_server(host, port, message):
    try:
        # Create a socket object
        client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        
        # Connect to the server
        client_socket.connect((host, port))
        print(f"Connected to server {host}:{port}")
        
        # Send the message to the server
        client_socket.sendall(message.encode('utf-8'))
        print(f"Sent to server: {message}")
        
        # Close the connection
        client_socket.close()
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    # Replace with the server's IP and port
    SERVER_HOST = '127.0.0.1'  # Localhost
    SERVER_PORT = 65432        # Example port
    
    # Message to send
    MESSAGE = "Hello, Server!"
    
    send_to_server(SERVER_HOST, SERVER_PORT, MESSAGE)


SERVER SIDE script to receive the string
import socket

def start_server(host, port):
    try:
        # Create a socket object
        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        
        # Bind the socket to the host and port
        server_socket.bind((host, port))
        
        # Listen for incoming connections
        server_socket.listen(1)
        print(f"Server listening on {host}:{port}")
        
        # Accept a connection
        conn, addr = server_socket.accept()
        print(f"Connection from {addr}")
        
        # Receive data from the client
        data = conn.recv(1024)  # Buffer size of 1024 bytes
        print(f"Received from client: {data.decode('utf-8')}")
        
        # Close the connection
        conn.close()
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    # Replace with desired host and port
    SERVER_HOST = '127.0.0.1'
    SERVER_PORT = 65432
    
    start_server(SERVER_HOST, SERVER_PORT)
	
	
	

' Python to receive server
import socket

def start_server(host, port):
    try:
        # Create a socket object
        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        
        # Bind the socket to the host and port
        server_socket.bind((host, port))
        
        # Listen for incoming connections
        server_socket.listen(1)
        print(f"Server listening on {host}:{port}")
        
        # Accept a connection
        conn, addr = server_socket.accept()
        print(f"Connection from {addr}")
        
        # Send data to the client
        conn.sendall("Hello, Client!".encode('utf-8'))
        
        # Close the connection
        conn.close()
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    # Replace with desired host and port
    SERVER_HOST = '127.0.0.1'
    SERVER_PORT = 65432
    
    start_server(SERVER_HOST, SERVER_PORT)



' Python Script to read from server
import socket

def read_from_server(host, port):
    try:
        # Create a socket object
        client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        
        # Connect to the server
        client_socket.connect((host, port))
        print(f"Connected to server {host}:{port}")
        
        # Receive data from the server
        data = client_socket.recv(1024)  # Buffer size of 1024 bytes
        print(f"Received from server: {data.decode('utf-8')}")
        
        # Close the connection
        client_socket.close()
        
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    # Replace with the server's IP and port
    SERVER_HOST = '127.0.0.1'  # Localhost
    SERVER_PORT = 65432        # Example port
    
    read_from_server(SERVER_HOST, SERVER_PORT)import socket


' Server Side Script for receiving
import socket

def start_server(host, port):
    try:
        # Create a socket object
        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        
        # Bind the socket to the host and port
        server_socket.bind((host, port))
        
        # Listen for incoming connections
        server_socket.listen(1)
        print(f"Server listening on {host}:{port}")
        
        # Accept a connection
        conn, addr = server_socket.accept()
        print(f"Connection from {addr}")
        
        # Send data to the client
        conn.sendall("Hello, Client!".encode('utf-8'))
        
        # Close the connection
        conn.close()
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    # Replace with desired host and port
    SERVER_HOST = '127.0.0.1'
    SERVER_PORT = 65432
    
    start_server(SERVER_HOST, SERVER_PORT)
	
	
	
	

' Python Scripts müssen auf der Serverseite ablauffen und auf der Client seite. Eventuell braucht der Server eine SQL Funktionalität um die Strings zu speichern
' Login Funktionalität muss auch gegeben sein